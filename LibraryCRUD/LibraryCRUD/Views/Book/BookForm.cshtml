@model BookFormViewModel
@{ 
    ViewData["Title"] = (Model.Id > 0 ? "Edit Book" : "Add Book" );
}


<h2>@(Model.Id > 0 ? "Edit" : "Add") book</h2>
<hr />
<section class="row justify-content-between">
    <div class="col-md-4">
        <form method="post" asp-action=@(Model.Id > 0 ? "Edit" : "Create") enctype="multipart/form-data">
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label class="text-muted" asp-for="Title"></label>
                <input type="text" class="form-control" asp-for="Title" maxlength="100" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="text-muted" asp-for="AuthorId"></label>
                <select class="form-control" asp-for="AuthorId" asp-items=@(new SelectList(Model.Authors,"Id","Name"))>
                    <option></option>
                </select>
                <span asp-validation-for="AuthorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="text-muted" asp-for="CategoryId"></label>
                <select class="form-control" asp-for="CategoryId" asp-items=@(new SelectList(Model.Categories,"Id","Name"))>
                    <option></option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group w-50">
                <label class="text-muted" asp-for="Year"></label>
                <input type="number" class="form-control" asp-for="Year" value="@(Model.Year>0?Model.Year:string.Empty)"/>
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
            <div class="form-group w-50">
                <label class="text-muted" asp-for="Rate"></label>
                <input type="number" step="0.1" min="0" max="10" class="form-control" asp-for="Rate" value="@(Model.Rate>0?Model.Rate:string.Empty)" />
                <span asp-validation-for="Rate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="text-muted" asp-for="Description"></label>
                <textarea class="form-control" asp-for="Description"maxlength="2500" rows="4" ></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="custom-file">
                <input type="file" class="custom-file-input" asp-for="Cover" accept="image/x-png, image/jpeg, image/jpg" />
                <label class="custom-file-label" asp-for="Cover"></label>
                <span asp-validation-for="Cover" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary mt-4" >
                <i class="bi bi-save"></i>
                Save
            </button>
            <a asp-action="Index" class="btn btn-outline-secondary mt-4">
                <i class="bi bi-trash"></i>
                Cancel
            </a>
        </form>
        

    </div>
    <div class="col-md-4 ">
        <div id="cover-container" class="@(Model.Id>0?string.Empty:"d-none") ">
            <img src="@(Model.Id>0?$"data:image/*;base64,{Convert.ToBase64String(Model.Cover)}":string.Empty)" alt="Book Cover" class="img-thumbnail rep-cover" />
        </div>
    </div>
</section>
@section Scripts{ 
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");}
    <script>
        $(document).ready(function () {
            $('#Cover').on('change', function () {
                var selectedFile = $(this).val().split('\\').pop();
                $(this).siblings('label').text(selectedFile);

                var coverContainer = $('#cover-container');
                var image = window.URL.createObjectURL(this.files[0]);

                coverContainer.removeClass('d-none');
                coverContainer.find('img').attr('src', image);

            });
            $('#Year').datepicker({
                format: 'yyyy',
                viewMode: 'years',
                minViewMode: 'years',
                startDate: new Date("1700-01-01"),
                endDate: new Date(),
                autoclose: true,
            });
            //$('#Year').datepicker({
            //    format: 'mm-dd-yyyy',
            //    viewMode: 'years',
            //    minViewMode: 'years',
            //    autoclose: true,
            //    endDate: new Date()
            //});
        });
    </script>
    
}